$default-speed: .5s;
$default-transition: cubic-bezier(.09,.5,.35,.98);
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000);
$easeOutQuint: cubic-bezier(0.230, 1.000, 0.320, 1.000);
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000);

@mixin fuck-smoothing() {
  image-rendering: optimizeSpeed;             /* FUCK SMOOTHING, GIVE ME SPEED  */
  image-rendering: -moz-crisp-edges;          /* Firefox                        */
  image-rendering: -o-crisp-edges;            /* Opera                          */
  image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
  image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
  -ms-interpolation-mode: nearest-neighbor;   /* IE8+    */
}

@mixin opacity($value) {
  $IEValue: $value*100;
  -moz-opacity: $value;
  -webkit-opacity: $value;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
  zoom: 1; /* goddamn ie */
}

@mixin transition-property($prop:all,$speed:$default-speed,$ease:$default-transition) {
  -webkit-transition: $prop $speed $ease;
  -moz-transition: $prop $speed $ease;
  transition: $prop $speed $ease;
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that is scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin scale($x,$y,$speed:$default-speed,$ease:$default-transition) {
  -ms-transform: scale($x,$y); /* IE 9 */
  -webkit-transform: scale($x,$y); /* Chrome, Safari, Opera */
  -moz-transform: scale($x,$y); /* Firefox */
  transform: scale($x,$y);
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}